Search.setIndex({"docnames": ["_autosummary/dicfg", "_autosummary/dicfg.config", "_autosummary/dicfg.config.ConfigDict", "_autosummary/dicfg.config.ConfigList", "_autosummary/dicfg.config.ConfigValue", "_autosummary/dicfg.config.merge", "_autosummary/dicfg.factory", "_autosummary/dicfg.factory.build_config", "_autosummary/dicfg.reader", "_autosummary/dicfg.reader.ConfigNotFoundError", "_autosummary/dicfg.reader.ConfigReader", "api", "badges", "getstarted", "index", "releasenotes", "userguide/index", "userguide/notebooks/commandlineinterface", "userguide/notebooks/contextkeys", "userguide/notebooks/dependencyinjection", "userguide/notebooks/interpolation", "userguide/notebooks/introduction", "userguide/notebooks/merge&replace", "userguide/notebooks/presets", "userguide/notebooks/searchpaths"], "filenames": ["_autosummary/dicfg.rst", "_autosummary/dicfg.config.rst", "_autosummary/dicfg.config.ConfigDict.rst", "_autosummary/dicfg.config.ConfigList.rst", "_autosummary/dicfg.config.ConfigValue.rst", "_autosummary/dicfg.config.merge.rst", "_autosummary/dicfg.factory.rst", "_autosummary/dicfg.factory.build_config.rst", "_autosummary/dicfg.reader.rst", "_autosummary/dicfg.reader.ConfigNotFoundError.rst", "_autosummary/dicfg.reader.ConfigReader.rst", "api.rst", "badges.md", "getstarted.rst", "index.rst", "releasenotes.rst", "userguide/index.rst", "userguide/notebooks/commandlineinterface.ipynb", "userguide/notebooks/contextkeys.ipynb", "userguide/notebooks/dependencyinjection.ipynb", "userguide/notebooks/interpolation.ipynb", "userguide/notebooks/introduction.ipynb", "userguide/notebooks/merge&replace.ipynb", "userguide/notebooks/presets.ipynb", "userguide/notebooks/searchpaths.ipynb"], "titles": ["dicfg", "dicfg.config", "dicfg.config.ConfigDict", "dicfg.config.ConfigList", "dicfg.config.ConfigValue", "dicfg.config.merge", "dicfg.factory", "dicfg.factory.build_config", "dicfg.reader", "dicfg.reader.ConfigNotFoundError", "dicfg.reader.ConfigReader", "API Reference", "&lt;no title&gt;", "Get Started with Dicfg", "Documentation", "Release Notes", "User Guide", "<strong>Command Line Interface</strong>", "<strong>Context Keys</strong>", "<strong>Dependency Injection</strong>", "<strong>Interpolation: ObjectFactory</strong>", "<strong>Introduction: ConfigReader</strong>", "<strong>Merge &amp; Replace</strong>", "<strong>Presets</strong>", "<strong>Search Paths</strong>"], "terms": {"modul": 0, "function": [1, 6, 19], "class": [1, 2, 3, 4, 8, 10, 16, 17, 18, 19, 20, 22, 23, 24], "data": [2, 3, 4], "ani": [2, 3, 4, 19], "merger": [2, 3, 4], "option": [2, 3, 4, 10], "callabl": [2, 3, 4], "none": [2, 3, 4, 10, 17, 18, 19, 20, 21, 22, 23, 24], "sourc": [2, 3, 4, 5, 7, 9, 10], "base": [2, 3, 4, 10], "configvalu": [2, 3], "userdict": 2, "wrapper": [2, 4, 24], "dict": [2, 5, 7, 10, 21, 24], "wrap": [2, 3, 4], "valu": [2, 3, 4, 16, 19, 24], "arg": [2, 3, 4, 5, 10, 19, 24], "merg": [2, 3, 4, 13, 16, 24], "default": [2, 3, 4, 10, 16, 17, 18, 19, 20, 21, 23, 24], "__init__": [2, 3, 4, 10, 19], "method": [2, 3, 4, 10, 16], "cast": [2, 3, 4, 24], "builtin": [2, 3, 4], "python": [2, 3, 4], "clear": [2, 3], "remov": [2, 3], "all": [2, 3, 16], "item": [2, 3, 24], "from": [2, 3, 17, 18, 19, 20, 21, 22, 23, 24], "d": 2, "get": [2, 14, 24], "k": 2, "els": 2, "set": [2, 16, 17], "like": 2, "object": [2, 4, 10, 14, 16], "provid": 2, "view": 2, "": [2, 3], "kei": [2, 10, 13, 16, 21, 24], "b": [2, 3, 4], "self": [2, 3, 4, 19], "anoth": [2, 3, 4], "return": [2, 3, 4, 5, 10, 16, 24], "pop": [2, 3], "v": 2, "specifi": [2, 19, 21], "correspond": [2, 16, 21], "If": 2, "i": [2, 3, 14, 16, 22], "found": [2, 9], "given": 2, "otherwis": 2, "keyerror": 2, "rais": [2, 3, 9, 24], "popitem": 2, "some": 2, "pair": 2, "2": [2, 17, 18, 19, 20, 21, 22, 23, 24], "tupl": [2, 5, 10, 24], "empti": [2, 3], "setdefault": 2, "also": 2, "updat": [2, 16], "e": [2, 19], "f": [2, 24], "map": [2, 24], "iter": [2, 3], "present": [2, 3], "ha": 2, "doe": 2, "lack": 2, "In": [2, 24], "either": 2, "case": 2, "thi": [2, 21], "follow": 2, "an": 2, "userlist": 3, "append": 3, "end": 3, "sequenc": 3, "count": 3, "integ": 3, "number": 3, "occurr": 3, "extend": 3, "other": 3, "element": 3, "index": 3, "start": [3, 14], "stop": 3, "first": [3, 16], "valueerror": 3, "support": [3, 14], "argument": [3, 16, 19, 24], "recommend": [3, 19], "insert": 3, "befor": 3, "last": [3, 24], "indexerror": 3, "list": [3, 16], "out": 3, "rang": 3, "revers": 3, "IN": 3, "place": 3, "configdict": 5, "differ": [5, 16], "config": [7, 9, 10, 14, 16], "except": [8, 9], "when": [9, 22], "file": [9, 10, 14, 16], "can": [9, 16], "read": [10, 16, 17, 18, 19, 20, 22, 24], "attribut": [10, 16], "classmethod": [10, 24], "user_config": [10, 17, 18, 19, 20, 21, 22, 23, 24], "union": 10, "str": [10, 24], "path": [10, 13, 16], "preset": [10, 13, 16, 24], "context_kei": [10, 18, 24], "search_path": [10, 24], "context": [10, 13, 16], "search": [10, 13, 16], "pip": 13, "essenti": 13, "introduct": [13, 16], "configread": [13, 16, 17, 18, 19, 20, 22, 23, 24], "command": [13, 16], "line": [13, 16, 24], "interfac": [13, 16], "replac": [13, 16], "interpol": [13, 14, 16], "objectfactori": [13, 16], "depend": [13, 14, 16], "inject": [13, 14, 16], "supplementari": 13, "dicfg": [14, 17, 18, 19, 20, 21, 22, 23, 24], "configur": 14, "system": 14, "directli": 14, "via": [14, 16, 19, 21], "user": 14, "guid": 14, "api": 14, "refer": [14, 16], "document": 15, "onlin": 15, "test": 15, "The": [16, 19], "step": 16, "creat": 16, "your": 16, "own": 16, "second": 16, "folder": 16, "contain": 16, "main": 16, "yml": [16, 17, 22, 23, 24], "dictionari": 16, "yaml": 16, "json": 16, "type": 16, "overrid": 16, "true": [16, 19], "fals": [16, 17, 18, 19, 20, 21, 23, 24], "alwai": 16, "result": 16, "referenc": [16, 21], "build": 16, "string": 16, "To": 16, "us": [16, 17, 22], "our": 16, "we": [16, 17], "need": 16, "setup": 16, "project": 16, "return_typ": 16, "done": 16, "allow": [16, 21], "A": 16, "save": 16, "ar": 16, "onli": 16, "current": 16, "work": 16, "directori": 16, "addit": 16, "find": 16, "multipl": 16, "independ": 16, "import": [17, 18, 19, 20, 21, 22, 23, 24], "sy": [17, 24], "copi": 17, "pprint": [17, 18, 19, 20, 21, 22, 23, 24], "reader": [17, 18, 19, 20, 21, 22, 23, 24], "myconfigread": [17, 18, 19, 20, 21, 22, 23, 24], "name": [17, 18, 19, 20, 21, 22, 23, 24], "myconfig": [17, 18, 19, 20, 21, 22, 23, 24], "argv": [17, 24], "re": 17, "later": 17, "sys_argv": 17, "cat": [17, 20, 21, 22, 23, 24], "config_int": [17, 18, 19, 20, 21, 22, 23, 24], "1": [17, 18, 19, 20, 21, 22, 23, 24], "config_str": [17, 18, 19, 20, 21, 22, 23, 24], "fire": [17, 18, 19, 20, 21, 22, 23, 24], "config_list": [17, 18, 19, 20, 21, 22, 23, 24], "3": [17, 18, 19, 20, 21, 22, 23, 24], "config_non": [17, 18, 19, 20, 21, 22, 23, 24], "config_dict": [17, 18, 19, 20, 21, 22, 23, 24], "sub_config": [17, 18, 19, 20, 21, 22, 23, 24], "water": [17, 18, 19, 20, 21, 22, 23, 24], "chang": 17, "dotlist": 17, "notat": 17, "automat": [17, 21], "sort_dict": [17, 18, 19, 20, 21, 22, 23, 24], "4": [17, 22], "6": [17, 22], "air": 17, "context1": 18, "context2": 18, "have": 18, "same": 18, "content": 18, "context1_str": 18, "context2_str": 18, "factori": [19, 20], "projectcompon": 19, "def": [19, 24], "myproject": 19, "project_compon": 19, "__main__": 19, "below": 19, "my_project_compon": 19, "non": 19, "keyword": 19, "g": 19, "print": [19, 20], "n": [19, 20], "anyth": 19, "howev": 19, "highli": 19, "convent": 19, "nproject": 19, "compon": 19, "0x7f01a8031040": 19, "0x7f01a8031f40": 19, "my_interpolation_compon": 19, "nrefer": 19, "interpolation_compon": 19, "0x7f01a803d340": 19, "my_attribute_compon": 19, "my_attribute_component_nam": 19, "nmy_attribute_component_nam": 19, "0x7f01a803dc70": 19, "earth": [20, 22], "ndefault": 20, "subclass": 21, "variabl": 21, "note": 21, "which": 21, "primit": 22, "even": 22, "sub_config2": 22, "anymor": 22, "echo": 23, "my_other_config_dir": 24, "my_other_config": 24, "100": 24, "confignotfounderror": 24, "traceback": 24, "most": 24, "recent": 24, "call": 24, "input": 24, "9": 24, "cell": 24, "code": 24, "py": 24, "91": 24, "cl": 24, "88": 24, "cli_config": 24, "_read_cli": 24, "90": 24, "cls_config": 24, "preset_config": 24, "_fuse_config": 24, "93": 24, "138": 24, "133": 24, "134": 24, "135": 24, "fuse_config": 24, "partial": 24, "136": 24, "137": 24, "142": 24, "140": 24, "141": 24, "_include_config": 24, "143": 24, "fused_config": 24, "deepcopi": 24, "144": 24, "145": 24, "146": 24, "anaconda3": 24, "env": 24, "mart": 24, "lib": 24, "python3": 24, "8": 24, "functool": 24, "875": 24, "singledispatch": 24, "local": 24, "kw": 24, "871": 24, "872": 24, "typeerror": 24, "funcnam": 24, "requir": 24, "least": 24, "873": 24, "posit": 24, "dispatch": 24, "0": 24, "__class__": 24, "185": 24, "_include_configs_dict": 24, "182": 24, "regist": 24, "183": 24, "184": 24, "186": 24, "176": 24, "_include_configs_str": 24, "173": 24, "174": 24, "175": 24, "suffix": 24, "_file_read": 24, "config_path": 24, "_search_config": 24, "177": 24, "open_config": 24, "178": 24, "165": 24, "config_nam": 24, "163": 24, "exist": 24, "164": 24}, "objects": {"": [[0, 0, 0, "-", "dicfg"]], "dicfg": [[1, 0, 0, "-", "config"], [6, 0, 0, "-", "factory"], [8, 0, 0, "-", "reader"]], "dicfg.config": [[2, 1, 1, "", "ConfigDict"], [3, 1, 1, "", "ConfigList"], [4, 1, 1, "", "ConfigValue"], [5, 3, 1, "", "merge"]], "dicfg.config.ConfigDict": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "cast"], [2, 2, 1, "", "clear"], [2, 2, 1, "", "get"], [2, 2, 1, "", "items"], [2, 2, 1, "", "keys"], [2, 2, 1, "", "merge"], [2, 2, 1, "", "pop"], [2, 2, 1, "", "popitem"], [2, 2, 1, "", "setdefault"], [2, 2, 1, "", "update"], [2, 2, 1, "", "values"]], "dicfg.config.ConfigList": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "append"], [3, 2, 1, "", "cast"], [3, 2, 1, "", "clear"], [3, 2, 1, "", "count"], [3, 2, 1, "", "extend"], [3, 2, 1, "", "index"], [3, 2, 1, "", "insert"], [3, 2, 1, "", "merge"], [3, 2, 1, "", "pop"], [3, 2, 1, "", "remove"], [3, 2, 1, "", "reverse"]], "dicfg.config.ConfigValue": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "cast"], [4, 2, 1, "", "merge"]], "dicfg.factory": [[7, 3, 1, "", "build_config"]], "dicfg.reader": [[9, 4, 1, "", "ConfigNotFoundError"], [10, 1, 1, "", "ConfigReader"]], "dicfg.reader.ConfigReader": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "read"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "exception", "Python exception"]}, "titleterms": {"dicfg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13], "config": [1, 2, 3, 4, 5, 17, 19, 20, 21, 22, 23, 24], "configdict": 2, "configlist": 3, "configvalu": 4, "merg": [5, 22], "factori": [6, 7], "build_config": 7, "reader": [8, 9, 10], "confignotfounderror": 9, "configread": [10, 21], "api": 11, "refer": [11, 19], "get": 13, "start": 13, "instal": 13, "user": [13, 16, 17, 21, 23], "guid": [13, 16], "document": 14, "releas": 15, "note": 15, "version": 15, "0": 15, "1": 15, "essenti": 16, "supplementari": 16, "command": [17, 23], "line": [17, 23], "interfac": [17, 23], "The": [17, 18, 21], "main": [17, 21], "can": [17, 18, 19, 20, 21, 22, 23, 24], "updat": [17, 18, 21, 22], "via": 17, "argument": 17, "all": 17, "type": [17, 19, 22], "overrid": [17, 23], "correspond": 17, "valu": [17, 20, 22], "context": 18, "kei": [18, 19, 20], "us": [18, 19, 23], "creat": [18, 21], "multipl": 18, "independ": 18, "depend": 19, "inject": 19, "To": 19, "our": 19, "we": 19, "first": [19, 21], "need": 19, "setup": 19, "project": 19, "object": 19, "objectfactori": [19, 20], "build": [19, 20], "return": 19, "return_typ": 19, "done": 19, "interpol": [19, 20], "i": [19, 21], "allow": 19, "attribut": 19, "file": [20, 21, 24], "yml": [20, 21], "yaml": [20, 21], "json": [20, 21], "referenc": 20, "string": 20, "introduct": 21, "step": 21, "your": 21, "own": 21, "second": 21, "folder": [21, 23, 24], "contain": 21, "read": [21, 23], "method": 21, "class": 21, "dictionari": [21, 22], "replac": 22, "true": 22, "fals": 22, "default": 22, "list": 22, "differ": 22, "alwai": 22, "result": 22, "preset": 23, "A": 23, "save": 23, "set": [23, 24], "search": 24, "path": 24, "ar": 24, "onli": 24, "current": 24, "work": 24, "directori": 24, "addit": 24, "find": 24}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"dicfg": [[0, "module-dicfg"]], "dicfg.config": [[1, "module-dicfg.config"]], "dicfg.config.ConfigDict": [[2, "dicfg-config-configdict"]], "dicfg.config.ConfigList": [[3, "dicfg-config-configlist"]], "dicfg.config.ConfigValue": [[4, "dicfg-config-configvalue"]], "dicfg.config.merge": [[5, "dicfg-config-merge"]], "dicfg.factory": [[6, "module-dicfg.factory"]], "dicfg.factory.build_config": [[7, "dicfg-factory-build-config"]], "dicfg.reader": [[8, "module-dicfg.reader"]], "dicfg.reader.ConfigNotFoundError": [[9, "dicfg-reader-confignotfounderror"]], "dicfg.reader.ConfigReader": [[10, "dicfg-reader-configreader"]], "API Reference": [[11, "api-reference"]], "Get Started with Dicfg": [[13, "get-started-with-dicfg"]], "Installation": [[13, "installation"]], "User Guide": [[13, "user-guide"], [16, "user-guide"]], "Documentation": [[14, "documentation"]], "Release Notes": [[15, "release-notes"]], "Version 0.0.1": [[15, "version-0-0-1"]], "Essentials": [[16, null]], "Supplementary": [[16, null]], "Command Line Interface": [[17, "command-line-interface"]], "The main config can be updated via command line interface arguments": [[17, "the-main-config-can-be-updated-via-command-line-interface-arguments"]], "All config types can be update via command line interface arguments": [[17, "all-config-types-can-be-update-via-command-line-interface-arguments"]], "Command line interface arguments will override corresponding user config values": [[17, "command-line-interface-arguments-will-override-corresponding-user-config-values"]], "Context Keys": [[18, "context-keys"]], "Context keys can be used to create multiple contexts.": [[18, "context-keys-can-be-used-to-create-multiple-contexts"]], "The multiple contexts can be independent updated.": [[18, "the-multiple-contexts-can-be-independent-updated"]], "Dependency Injection": [[19, "dependency-injection"]], "To use dependency injection in our config we first need to setup a project with object dependencies": [[19, "to-use-dependency-injection-in-our-config-we-first-need-to-setup-a-project-with-object-dependencies"]], "ObjectFactory can build objects with the *object key": [[19, "objectfactory-can-build-objects-with-the-object-key"]], "ObjectFactory can return types with the *return_type: key": [[19, "objectfactory-can-return-types-with-the-return-type-key"]], "Dependency Injection can be done by object interpolation": [[19, "dependency-injection-can-be-done-by-object-interpolation"]], "ObjectFactory interpolation of objects is done by object reference": [[19, "objectfactory-interpolation-of-objects-is-done-by-object-reference"]], "ObjectFactory allows for object attribute interpolation": [[19, "objectfactory-allows-for-object-attribute-interpolation"]], "Interpolation: ObjectFactory": [[20, "interpolation-objectfactory"]], "Config files (.yml, \u2018.yaml\u2019, and \u2018json\u2019) can be interpolated in a config": [[20, "config-files-yml-yaml-and-json-can-be-interpolated-in-a-config"]], "Config values can be interpolated in a config by referencing with $(key) and building the config with ObjectFactory": [[20, "config-values-can-be-interpolated-in-a-config-by-referencing-with-key-and-building-the-config-with-objectfactory"]], "String values can be interpolated in a config by referencing with $(key) and building the config with ObjectFactory": [[20, "string-values-can-be-interpolated-in-a-config-by-referencing-with-key-and-building-the-config-with-objectfactory"]], "Introduction: ConfigReader": [[21, "introduction-configreader"]], "The first step is to create your own ConfigReader": [[21, "the-first-step-is-to-create-your-own-configreader"]], "The second step is to create a configs folder containing a main config file: config.yml": [[21, "the-second-step-is-to-create-a-configs-folder-containing-a-main-config-file-config-yml"]], "The main config file can be read with the .read method of the ConfigReader class": [[21, "the-main-config-file-can-be-read-with-the-read-method-of-the-configreader-class"]], "The main config can be updated with a user config dictionary": [[21, "the-main-config-can-be-updated-with-a-user-config-dictionary"]], "The main config can be updated with a user config file (.yml, .yaml, .json)": [[21, "the-main-config-can-be-updated-with-a-user-config-file-yml-yaml-json"]], "Merge & Replace": [[22, "merge-replace"]], "Config values can be merged or replaced with @replace(true|false)": [[22, "config-values-can-be-merged-or-replaced-with-replace-true-false"]], "Dictionaries will be merged by default (@replace(false))": [[22, "dictionaries-will-be-merged-by-default-replace-false"]], "Dictionaries can be replaced by @replace(true)": [[22, "dictionaries-can-be-replaced-by-replace-true"]], "List will be replaced by default (@replace(true))": [[22, "list-will-be-replaced-by-default-replace-true"]], "List can be merged with @replace(false)": [[22, "list-can-be-merged-with-replace-false"]], "Updating with type difference will always result in a replace": [[22, "updating-with-type-difference-will-always-result-in-a-replace"]], "Presets": [[23, "presets"]], "A presets folder in the configs folder can be used to save and read presets settings": [[23, "a-presets-folder-in-the-configs-folder-can-be-used-to-save-and-read-presets-settings"]], "User config and command line interface settings override presets settings": [[23, "user-config-and-command-line-interface-settings-override-presets-settings"]], "Search Paths": [[24, "search-paths"]], "Config files are searched only in the configs folder and the current working directory.": [[24, "config-files-are-searched-only-in-the-configs-folder-and-the-current-working-directory"]], "Additional search paths can be set to find additional config files.": [[24, "additional-search-paths-can-be-set-to-find-additional-config-files"]]}, "indexentries": {"dicfg": [[0, "module-dicfg"]], "module": [[0, "module-dicfg"], [1, "module-dicfg.config"], [6, "module-dicfg.factory"], [8, "module-dicfg.reader"]], "dicfg.config": [[1, "module-dicfg.config"]], "configdict (class in dicfg.config)": [[2, "dicfg.config.ConfigDict"]], "__init__() (configdict method)": [[2, "dicfg.config.ConfigDict.__init__"]], "cast() (configdict method)": [[2, "dicfg.config.ConfigDict.cast"]], "clear() (configdict method)": [[2, "dicfg.config.ConfigDict.clear"]], "get() (configdict method)": [[2, "dicfg.config.ConfigDict.get"]], "items() (configdict method)": [[2, "dicfg.config.ConfigDict.items"]], "keys() (configdict method)": [[2, "dicfg.config.ConfigDict.keys"]], "merge() (configdict method)": [[2, "dicfg.config.ConfigDict.merge"]], "pop() (configdict method)": [[2, "dicfg.config.ConfigDict.pop"]], "popitem() (configdict method)": [[2, "dicfg.config.ConfigDict.popitem"]], "setdefault() (configdict method)": [[2, "dicfg.config.ConfigDict.setdefault"]], "update() (configdict method)": [[2, "dicfg.config.ConfigDict.update"]], "values() (configdict method)": [[2, "dicfg.config.ConfigDict.values"]], "configlist (class in dicfg.config)": [[3, "dicfg.config.ConfigList"]], "__init__() (configlist method)": [[3, "dicfg.config.ConfigList.__init__"]], "append() (configlist method)": [[3, "dicfg.config.ConfigList.append"]], "cast() (configlist method)": [[3, "dicfg.config.ConfigList.cast"]], "clear() (configlist method)": [[3, "dicfg.config.ConfigList.clear"]], "count() (configlist method)": [[3, "dicfg.config.ConfigList.count"]], "extend() (configlist method)": [[3, "dicfg.config.ConfigList.extend"]], "index() (configlist method)": [[3, "dicfg.config.ConfigList.index"]], "insert() (configlist method)": [[3, "dicfg.config.ConfigList.insert"]], "merge() (configlist method)": [[3, "dicfg.config.ConfigList.merge"]], "pop() (configlist method)": [[3, "dicfg.config.ConfigList.pop"]], "remove() (configlist method)": [[3, "dicfg.config.ConfigList.remove"]], "reverse() (configlist method)": [[3, "dicfg.config.ConfigList.reverse"]], "configvalue (class in dicfg.config)": [[4, "dicfg.config.ConfigValue"]], "__init__() (configvalue method)": [[4, "dicfg.config.ConfigValue.__init__"]], "cast() (configvalue method)": [[4, "dicfg.config.ConfigValue.cast"]], "merge() (configvalue method)": [[4, "dicfg.config.ConfigValue.merge"]], "merge() (in module dicfg.config)": [[5, "dicfg.config.merge"]], "dicfg.factory": [[6, "module-dicfg.factory"]], "build_config() (in module dicfg.factory)": [[7, "dicfg.factory.build_config"]], "dicfg.reader": [[8, "module-dicfg.reader"]], "confignotfounderror": [[9, "dicfg.reader.ConfigNotFoundError"]], "configreader (class in dicfg.reader)": [[10, "dicfg.reader.ConfigReader"]], "__init__() (configreader method)": [[10, "dicfg.reader.ConfigReader.__init__"]], "read() (configreader class method)": [[10, "dicfg.reader.ConfigReader.read"]]}})