Search.setIndex({"docnames": ["_autosummary/dicfg", "_autosummary/dicfg.config", "_autosummary/dicfg.config.ConfigDict", "_autosummary/dicfg.config.ConfigList", "_autosummary/dicfg.config.ConfigValue", "_autosummary/dicfg.config.merge", "_autosummary/dicfg.factory", "_autosummary/dicfg.factory.ObjectFactory", "_autosummary/dicfg.reader", "_autosummary/dicfg.reader.ConfigNotFoundError", "_autosummary/dicfg.reader.ConfigReader", "api", "getstarted", "index", "releasenotes", "userguide/index", "userguide/notebooks/commandlineinterface", "userguide/notebooks/contextkeys", "userguide/notebooks/dependencyinjection", "userguide/notebooks/interpolation", "userguide/notebooks/introduction", "userguide/notebooks/merge&replace", "userguide/notebooks/presets", "userguide/notebooks/searchpaths"], "filenames": ["_autosummary/dicfg.rst", "_autosummary/dicfg.config.rst", "_autosummary/dicfg.config.ConfigDict.rst", "_autosummary/dicfg.config.ConfigList.rst", "_autosummary/dicfg.config.ConfigValue.rst", "_autosummary/dicfg.config.merge.rst", "_autosummary/dicfg.factory.rst", "_autosummary/dicfg.factory.ObjectFactory.rst", "_autosummary/dicfg.reader.rst", "_autosummary/dicfg.reader.ConfigNotFoundError.rst", "_autosummary/dicfg.reader.ConfigReader.rst", "api.rst", "getstarted.rst", "index.rst", "releasenotes.rst", "userguide/index.rst", "userguide/notebooks/commandlineinterface.ipynb", "userguide/notebooks/contextkeys.ipynb", "userguide/notebooks/dependencyinjection.ipynb", "userguide/notebooks/interpolation.ipynb", "userguide/notebooks/introduction.ipynb", "userguide/notebooks/merge&replace.ipynb", "userguide/notebooks/presets.ipynb", "userguide/notebooks/searchpaths.ipynb"], "titles": ["dicfg", "dicfg.config", "dicfg.config.ConfigDict", "dicfg.config.ConfigList", "dicfg.config.ConfigValue", "dicfg.config.merge", "dicfg.factory", "dicfg.factory.ObjectFactory", "dicfg.reader", "dicfg.reader.ConfigNotFoundError", "dicfg.reader.ConfigReader", "API Reference", "Get Started with Dicfg", "Documentation", "Release Notes", "User Guide", "<strong>Command Line Interface</strong>", "<strong>Context Keys</strong>", "<strong>Dependency Injection</strong>", "<strong>Interpolation</strong>", "<strong>Introduction</strong>", "<strong>Merge &amp; Replace</strong>", "<strong>Presets</strong>", "<strong>Search Paths</strong>"], "terms": {"modul": 0, "function": [1, 18], "class": [1, 2, 3, 4, 6, 7, 8, 10, 15, 16, 17, 18, 19, 21, 22, 23], "data": [2, 3, 4], "ani": [2, 3, 4, 18], "merger": [2, 3, 4], "option": [2, 3, 4, 10], "callabl": [2, 3, 4], "none": [2, 3, 4, 10, 16, 17, 18, 19, 20, 21, 22, 23], "sourc": [2, 3, 4, 5, 7, 9, 10], "base": [2, 3, 4, 7, 10], "configvalu": [2, 3], "userdict": 2, "wrapper": [2, 4, 23], "dict": [2, 5, 7, 10, 20, 23], "wrap": [2, 3, 4], "valu": [2, 3, 4, 15, 18, 23], "arg": [2, 3, 4, 5, 7, 10, 18, 23], "merg": [2, 3, 4, 12, 15, 23], "default": [2, 3, 4, 10, 15, 16, 17, 18, 19, 20, 22, 23], "__init__": [2, 3, 4, 7, 10, 18], "method": [2, 3, 4, 7, 10, 15], "cast": [2, 3, 4, 23], "builtin": [2, 3, 4], "python": [2, 3, 4], "clear": [2, 3], "remov": [2, 3], "all": [2, 3, 15], "item": [2, 3, 23], "from": [2, 3, 16, 17, 18, 19, 20, 21, 22, 23], "d": 2, "get": [2, 13, 23], "k": 2, "els": 2, "set": [2, 15, 16], "like": 2, "object": [2, 4, 7, 10, 15], "provid": 2, "view": 2, "": [2, 3], "kei": [2, 10, 12, 15, 20, 23], "b": [2, 3, 4], "self": [2, 3, 4, 18], "anoth": [2, 3, 4], "return": [2, 3, 4, 5, 7, 10, 15, 23], "pop": [2, 3], "v": 2, "specifi": [2, 18, 20], "correspond": [2, 15, 20], "If": 2, "i": [2, 3, 13, 15, 21], "found": [2, 9], "given": 2, "otherwis": 2, "keyerror": 2, "rais": [2, 3, 9, 23], "popitem": 2, "some": 2, "pair": 2, "2": [2, 16, 17, 18, 19, 20, 21, 22, 23], "tupl": [2, 5, 10, 23], "empti": [2, 3], "setdefault": 2, "also": 2, "updat": [2, 15], "e": [2, 18], "f": [2, 23], "map": [2, 23], "iter": [2, 3], "present": [2, 3], "ha": 2, "doe": 2, "lack": 2, "In": [2, 23], "either": 2, "case": 2, "thi": [2, 20], "follow": 2, "an": 2, "userlist": 3, "append": 3, "end": 3, "sequenc": 3, "count": 3, "integ": 3, "number": 3, "occurr": 3, "extend": 3, "other": 3, "element": 3, "index": 3, "start": [3, 13], "stop": 3, "first": [3, 15], "valueerror": 3, "support": [3, 13], "argument": [3, 15, 18, 23], "recommend": [3, 18], "insert": 3, "befor": 3, "last": [3, 23], "indexerror": 3, "list": [3, 15], "out": 3, "rang": 3, "revers": 3, "IN": 3, "place": 3, "configdict": 5, "differ": [5, 15], "config": [7, 9, 10, 13, 15], "allow": [7, 15, 20], "build": [7, 15], "initi": 7, "dictionari": [7, 15], "classmethod": [7, 10, 23], "except": [8, 9], "when": [9, 21], "file": [9, 10, 13, 15], "can": [9, 15], "read": [10, 15, 16, 17, 18, 19, 21, 23], "attribut": [10, 15], "user_config": [10, 16, 17, 18, 19, 20, 21, 22, 23], "union": 10, "str": [10, 23], "path": [10, 12, 15], "preset": [10, 12, 15, 23], "context_kei": [10, 17, 23], "search_path": [10, 23], "context": [10, 12, 15], "search": [10, 12, 15], "pip": 12, "essenti": 12, "introduct": [12, 15], "command": [12, 15], "line": [12, 15, 23], "interfac": [12, 15], "replac": [12, 15], "interpol": [12, 15], "depend": [12, 13, 15], "inject": [12, 13, 15], "supplementari": 12, "dicfg": [13, 16, 17, 18, 19, 20, 21, 22, 23], "configur": 13, "system": 13, "user": 13, "guid": 13, "api": 13, "refer": [13, 15], "document": 14, "onlin": 14, "test": 14, "The": [15, 18], "step": 15, "creat": 15, "your": 15, "own": 15, "configread": [15, 16, 17, 18, 19, 21, 22, 23], "second": 15, "folder": 15, "contain": 15, "main": 15, "yml": [15, 16, 21, 22, 23], "yaml": 15, "json": 15, "via": [15, 18, 20], "type": 15, "overrid": 15, "true": [15, 18], "fals": [15, 16, 17, 18, 19, 20, 22, 23], "alwai": 15, "result": 15, "referenc": [15, 20], "objectfactori": 15, "string": 15, "To": 15, "us": [15, 16, 21], "our": 15, "we": [15, 16], "need": 15, "setup": 15, "project": 15, "return_typ": 15, "done": 15, "A": 15, "save": 15, "ar": 15, "onli": 15, "current": 15, "work": 15, "directori": 15, "addit": 15, "find": 15, "multipl": 15, "independ": 15, "import": [16, 17, 18, 19, 20, 21, 22, 23], "sy": [16, 23], "copi": 16, "pprint": [16, 17, 18, 19, 20, 21, 22, 23], "reader": [16, 17, 18, 19, 20, 21, 22, 23], "myconfigread": [16, 17, 18, 19, 20, 21, 22, 23], "name": [16, 17, 18, 19, 20, 21, 22, 23], "myconfig": [16, 17, 18, 19, 20, 21, 22, 23], "argv": [16, 23], "re": 16, "later": 16, "sys_argv": 16, "cat": [16, 19, 20, 21, 22, 23], "config_int": [16, 17, 18, 19, 20, 21, 22, 23], "1": [16, 17, 18, 19, 20, 21, 22, 23], "config_str": [16, 17, 18, 19, 20, 21, 22, 23], "fire": [16, 17, 18, 19, 20, 21, 22, 23], "config_list": [16, 17, 18, 19, 20, 21, 22, 23], "3": [16, 17, 18, 19, 20, 21, 22, 23], "config_non": [16, 17, 18, 19, 20, 21, 22, 23], "config_dict": [16, 17, 18, 19, 20, 21, 22, 23], "sub_config": [16, 17, 18, 19, 20, 21, 22, 23], "water": [16, 17, 18, 19, 20, 21, 22, 23], "chang": 16, "dotlist": 16, "notat": 16, "automat": [16, 20], "sort_dict": [16, 17, 18, 19, 20, 21, 22, 23], "4": [16, 21], "6": [16, 21], "air": 16, "context1": 17, "context2": 17, "have": 17, "same": 17, "content": 17, "context1_str": 17, "context2_str": 17, "factori": [18, 19], "projectcompon": 18, "def": [18, 23], "myproject": 18, "project_compon": 18, "__main__": 18, "below": 18, "my_project_compon": 18, "non": 18, "keyword": 18, "g": 18, "print": [18, 19], "n": [18, 19], "anyth": 18, "howev": 18, "highli": 18, "convent": 18, "nproject": 18, "compon": 18, "0x7f01a8031040": 18, "0x7f01a8031f40": 18, "my_interpolation_compon": 18, "nrefer": 18, "interpolation_compon": 18, "0x7f01a803d340": 18, "my_attribute_compon": 18, "my_attribute_component_nam": 18, "nmy_attribute_component_nam": 18, "0x7f01a803dc70": 18, "earth": [19, 21], "ndefault": 19, "subclass": 20, "variabl": 20, "note": 20, "which": 20, "primit": 21, "even": 21, "sub_config2": 21, "anymor": 21, "echo": 22, "my_other_config_dir": 23, "my_other_config": 23, "100": 23, "confignotfounderror": 23, "traceback": 23, "most": 23, "recent": 23, "call": 23, "input": 23, "9": 23, "cell": 23, "code": 23, "py": 23, "91": 23, "cl": 23, "88": 23, "cli_config": 23, "_read_cli": 23, "90": 23, "cls_config": 23, "preset_config": 23, "_fuse_config": 23, "93": 23, "138": 23, "133": 23, "134": 23, "135": 23, "fuse_config": 23, "partial": 23, "136": 23, "137": 23, "142": 23, "140": 23, "141": 23, "_include_config": 23, "143": 23, "fused_config": 23, "deepcopi": 23, "144": 23, "145": 23, "146": 23, "anaconda3": 23, "env": 23, "mart": 23, "lib": 23, "python3": 23, "8": 23, "functool": 23, "875": 23, "singledispatch": 23, "local": 23, "kw": 23, "871": 23, "872": 23, "typeerror": 23, "funcnam": 23, "requir": 23, "least": 23, "873": 23, "posit": 23, "dispatch": 23, "0": 23, "__class__": 23, "185": 23, "_include_configs_dict": 23, "182": 23, "regist": 23, "183": 23, "184": 23, "186": 23, "176": 23, "_include_configs_str": 23, "173": 23, "174": 23, "175": 23, "suffix": 23, "_file_read": 23, "config_path": 23, "_search_config": 23, "177": 23, "open_config": 23, "178": 23, "165": 23, "config_nam": 23, "163": 23, "exist": 23, "164": 23}, "objects": {"": [[0, 0, 0, "-", "dicfg"]], "dicfg": [[1, 0, 0, "-", "config"], [6, 0, 0, "-", "factory"], [8, 0, 0, "-", "reader"]], "dicfg.config": [[2, 1, 1, "", "ConfigDict"], [3, 1, 1, "", "ConfigList"], [4, 1, 1, "", "ConfigValue"], [5, 3, 1, "", "merge"]], "dicfg.config.ConfigDict": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "cast"], [2, 2, 1, "", "clear"], [2, 2, 1, "", "get"], [2, 2, 1, "", "items"], [2, 2, 1, "", "keys"], [2, 2, 1, "", "merge"], [2, 2, 1, "", "pop"], [2, 2, 1, "", "popitem"], [2, 2, 1, "", "setdefault"], [2, 2, 1, "", "update"], [2, 2, 1, "", "values"]], "dicfg.config.ConfigList": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "append"], [3, 2, 1, "", "cast"], [3, 2, 1, "", "clear"], [3, 2, 1, "", "count"], [3, 2, 1, "", "extend"], [3, 2, 1, "", "index"], [3, 2, 1, "", "insert"], [3, 2, 1, "", "merge"], [3, 2, 1, "", "pop"], [3, 2, 1, "", "remove"], [3, 2, 1, "", "reverse"]], "dicfg.config.ConfigValue": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "cast"], [4, 2, 1, "", "merge"]], "dicfg.factory": [[7, 1, 1, "", "ObjectFactory"]], "dicfg.factory.ObjectFactory": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "build"]], "dicfg.reader": [[9, 4, 1, "", "ConfigNotFoundError"], [10, 1, 1, "", "ConfigReader"]], "dicfg.reader.ConfigReader": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "read"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "exception", "Python exception"]}, "titleterms": {"dicfg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12], "config": [1, 2, 3, 4, 5, 16, 18, 19, 20, 21, 22, 23], "configdict": 2, "configlist": 3, "configvalu": 4, "merg": [5, 21], "factori": [6, 7], "objectfactori": [7, 18, 19], "reader": [8, 9, 10], "confignotfounderror": 9, "configread": [10, 20], "api": 11, "refer": [11, 18], "get": 12, "start": 12, "instal": 12, "user": [12, 15, 16, 20, 22], "guid": [12, 15], "document": 13, "releas": 14, "note": 14, "version": 14, "0": 14, "1": 14, "essenti": 15, "supplementari": 15, "command": [16, 22], "line": [16, 22], "interfac": [16, 22], "The": [16, 17, 20], "main": [16, 20], "can": [16, 17, 18, 19, 20, 21, 22, 23], "updat": [16, 17, 20, 21], "via": 16, "argument": 16, "all": 16, "type": [16, 18, 21], "overrid": [16, 22], "correspond": 16, "valu": [16, 19, 21], "context": 17, "kei": [17, 18, 19], "us": [17, 18, 22], "creat": [17, 20], "multipl": 17, "independ": 17, "depend": 18, "inject": 18, "To": 18, "our": 18, "we": 18, "first": [18, 20], "need": 18, "setup": 18, "project": 18, "object": 18, "build": [18, 19], "return": 18, "return_typ": 18, "done": 18, "interpol": [18, 19], "i": [18, 20], "allow": 18, "attribut": 18, "file": [19, 20, 23], "yml": [19, 20], "yaml": [19, 20], "json": [19, 20], "referenc": 19, "string": 19, "introduct": 20, "step": 20, "your": 20, "own": 20, "second": 20, "folder": [20, 22, 23], "contain": 20, "read": [20, 22], "method": 20, "class": 20, "dictionari": [20, 21], "replac": 21, "true": 21, "fals": 21, "default": 21, "list": 21, "differ": 21, "alwai": 21, "result": 21, "preset": 22, "A": 22, "save": 22, "set": [22, 23], "search": 23, "path": 23, "ar": 23, "onli": 23, "current": 23, "work": 23, "directori": 23, "addit": 23, "find": 23}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"dicfg": [[0, "module-dicfg"]], "dicfg.config": [[1, "module-dicfg.config"]], "dicfg.config.ConfigDict": [[2, "dicfg-config-configdict"]], "dicfg.config.ConfigList": [[3, "dicfg-config-configlist"]], "dicfg.config.ConfigValue": [[4, "dicfg-config-configvalue"]], "dicfg.config.merge": [[5, "dicfg-config-merge"]], "dicfg.factory": [[6, "module-dicfg.factory"]], "dicfg.factory.ObjectFactory": [[7, "dicfg-factory-objectfactory"]], "dicfg.reader": [[8, "module-dicfg.reader"]], "dicfg.reader.ConfigNotFoundError": [[9, "dicfg-reader-confignotfounderror"]], "dicfg.reader.ConfigReader": [[10, "dicfg-reader-configreader"]], "API Reference": [[11, "api-reference"]], "Get Started with Dicfg": [[12, "get-started-with-dicfg"]], "Installation": [[12, "installation"]], "User Guide": [[12, "user-guide"], [15, "user-guide"]], "Documentation": [[13, "documentation"]], "Release Notes": [[14, "release-notes"]], "Version 0.0.1": [[14, "version-0-0-1"]], "Essentials": [[15, null]], "Supplementary": [[15, null]], "Command Line Interface": [[16, "command-line-interface"]], "The main config can be updated via command line interface arguments": [[16, "the-main-config-can-be-updated-via-command-line-interface-arguments"]], "All config types can be update via command line interface arguments": [[16, "all-config-types-can-be-update-via-command-line-interface-arguments"]], "Command line interface arguments will override corresponding user config values": [[16, "command-line-interface-arguments-will-override-corresponding-user-config-values"]], "Context Keys": [[17, "context-keys"]], "Context keys can be used to create multiple contexts.": [[17, "context-keys-can-be-used-to-create-multiple-contexts"]], "The multiple contexts can be independent updated.": [[17, "the-multiple-contexts-can-be-independent-updated"]], "Dependency Injection": [[18, "dependency-injection"]], "To use dependency injection in our config we first need to setup a project with object dependencies": [[18, "to-use-dependency-injection-in-our-config-we-first-need-to-setup-a-project-with-object-dependencies"]], "ObjectFactory can build objects with the *object key": [[18, "objectfactory-can-build-objects-with-the-object-key"]], "ObjectFactory can return types with the *return_type: key": [[18, "objectfactory-can-return-types-with-the-return-type-key"]], "Dependency Injection can be done by object interpolation": [[18, "dependency-injection-can-be-done-by-object-interpolation"]], "ObjectFactory interpolation of objects is done by object reference": [[18, "objectfactory-interpolation-of-objects-is-done-by-object-reference"]], "ObjectFactory allows for object attribute interpolation": [[18, "objectfactory-allows-for-object-attribute-interpolation"]], "Interpolation": [[19, "interpolation"]], "Config files (.yml, \u2018.yaml\u2019, and \u2018json\u2019) can be interpolated in a config": [[19, "config-files-yml-yaml-and-json-can-be-interpolated-in-a-config"]], "Config values can be interpolated in a config by referencing with $(key) and building the config with ObjectFactory": [[19, "config-values-can-be-interpolated-in-a-config-by-referencing-with-key-and-building-the-config-with-objectfactory"]], "String values can be interpolated in a config by referencing with $(key) and building the config with ObjectFactory": [[19, "string-values-can-be-interpolated-in-a-config-by-referencing-with-key-and-building-the-config-with-objectfactory"]], "Introduction": [[20, "introduction"]], "The first step is to create your own ConfigReader": [[20, "the-first-step-is-to-create-your-own-configreader"]], "The second step is to create a configs folder containing a main config file: config.yml": [[20, "the-second-step-is-to-create-a-configs-folder-containing-a-main-config-file-config-yml"]], "The main config file can be read with the .read method of the ConfigReader class": [[20, "the-main-config-file-can-be-read-with-the-read-method-of-the-configreader-class"]], "The main config can be updated with a user config dictionary": [[20, "the-main-config-can-be-updated-with-a-user-config-dictionary"]], "The main config can be updated with a user config file (.yml, .yaml, .json)": [[20, "the-main-config-can-be-updated-with-a-user-config-file-yml-yaml-json"]], "Merge & Replace": [[21, "merge-replace"]], "Config values can be merged or replaced with @replace(true|false)": [[21, "config-values-can-be-merged-or-replaced-with-replace-true-false"]], "Dictionaries will be merged by default (@replace(false))": [[21, "dictionaries-will-be-merged-by-default-replace-false"]], "Dictionaries can be replaced by @replace(true)": [[21, "dictionaries-can-be-replaced-by-replace-true"]], "List will be replaced by default (@replace(true))": [[21, "list-will-be-replaced-by-default-replace-true"]], "List can be merged with @replace(false)": [[21, "list-can-be-merged-with-replace-false"]], "Updating with type difference will always result in a replace": [[21, "updating-with-type-difference-will-always-result-in-a-replace"]], "Presets": [[22, "presets"]], "A presets folder in the configs folder can be used to save and read presets settings": [[22, "a-presets-folder-in-the-configs-folder-can-be-used-to-save-and-read-presets-settings"]], "User config and command line interface settings override presets settings": [[22, "user-config-and-command-line-interface-settings-override-presets-settings"]], "Search Paths": [[23, "search-paths"]], "Config files are searched only in the configs folder and the current working directory.": [[23, "config-files-are-searched-only-in-the-configs-folder-and-the-current-working-directory"]], "Additional search paths can be set to find additional config files.": [[23, "additional-search-paths-can-be-set-to-find-additional-config-files"]]}, "indexentries": {"dicfg": [[0, "module-dicfg"]], "module": [[0, "module-dicfg"], [1, "module-dicfg.config"], [6, "module-dicfg.factory"], [8, "module-dicfg.reader"]], "dicfg.config": [[1, "module-dicfg.config"]], "configdict (class in dicfg.config)": [[2, "dicfg.config.ConfigDict"]], "__init__() (configdict method)": [[2, "dicfg.config.ConfigDict.__init__"]], "cast() (configdict method)": [[2, "dicfg.config.ConfigDict.cast"]], "clear() (configdict method)": [[2, "dicfg.config.ConfigDict.clear"]], "get() (configdict method)": [[2, "dicfg.config.ConfigDict.get"]], "items() (configdict method)": [[2, "dicfg.config.ConfigDict.items"]], "keys() (configdict method)": [[2, "dicfg.config.ConfigDict.keys"]], "merge() (configdict method)": [[2, "dicfg.config.ConfigDict.merge"]], "pop() (configdict method)": [[2, "dicfg.config.ConfigDict.pop"]], "popitem() (configdict method)": [[2, "dicfg.config.ConfigDict.popitem"]], "setdefault() (configdict method)": [[2, "dicfg.config.ConfigDict.setdefault"]], "update() (configdict method)": [[2, "dicfg.config.ConfigDict.update"]], "values() (configdict method)": [[2, "dicfg.config.ConfigDict.values"]], "configlist (class in dicfg.config)": [[3, "dicfg.config.ConfigList"]], "__init__() (configlist method)": [[3, "dicfg.config.ConfigList.__init__"]], "append() (configlist method)": [[3, "dicfg.config.ConfigList.append"]], "cast() (configlist method)": [[3, "dicfg.config.ConfigList.cast"]], "clear() (configlist method)": [[3, "dicfg.config.ConfigList.clear"]], "count() (configlist method)": [[3, "dicfg.config.ConfigList.count"]], "extend() (configlist method)": [[3, "dicfg.config.ConfigList.extend"]], "index() (configlist method)": [[3, "dicfg.config.ConfigList.index"]], "insert() (configlist method)": [[3, "dicfg.config.ConfigList.insert"]], "merge() (configlist method)": [[3, "dicfg.config.ConfigList.merge"]], "pop() (configlist method)": [[3, "dicfg.config.ConfigList.pop"]], "remove() (configlist method)": [[3, "dicfg.config.ConfigList.remove"]], "reverse() (configlist method)": [[3, "dicfg.config.ConfigList.reverse"]], "configvalue (class in dicfg.config)": [[4, "dicfg.config.ConfigValue"]], "__init__() (configvalue method)": [[4, "dicfg.config.ConfigValue.__init__"]], "cast() (configvalue method)": [[4, "dicfg.config.ConfigValue.cast"]], "merge() (configvalue method)": [[4, "dicfg.config.ConfigValue.merge"]], "merge() (in module dicfg.config)": [[5, "dicfg.config.merge"]], "dicfg.factory": [[6, "module-dicfg.factory"]], "objectfactory (class in dicfg.factory)": [[7, "dicfg.factory.ObjectFactory"]], "__init__() (objectfactory method)": [[7, "dicfg.factory.ObjectFactory.__init__"]], "build() (objectfactory class method)": [[7, "dicfg.factory.ObjectFactory.build"]], "dicfg.reader": [[8, "module-dicfg.reader"]], "confignotfounderror": [[9, "dicfg.reader.ConfigNotFoundError"]], "configreader (class in dicfg.reader)": [[10, "dicfg.reader.ConfigReader"]], "__init__() (configreader method)": [[10, "dicfg.reader.ConfigReader.__init__"]], "read() (configreader class method)": [[10, "dicfg.reader.ConfigReader.read"]]}})