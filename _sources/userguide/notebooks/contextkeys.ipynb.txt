{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "61e5d0e7-e436-4cc0-b3d9-643b604c37d9",
   "metadata": {},
   "source": [
    "# **Context Keys**\n",
    "----"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f87ec675-868f-41be-be65-87ad41987625",
   "metadata": {},
   "source": [
    "### Context keys can be used to **create multiple contexts**."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "191a92c0-bfa0-4472-9746-9105170213c0",
   "metadata": {},
   "outputs": [],
   "source": [
    "from pprint import pprint\n",
    "\n",
    "from dicfg.reader import ConfigReader\n",
    "\n",
    "# adding context1 and context2 as context keys\n",
    "config_reader = ConfigReader(name=\"myconfig\", context_keys=(\"context1\", \"context2\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "691df6c8-620c-4145-a44f-1a47b93495d5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'context1': {'config_int': 1,\n",
      "              'config_string': 'fire',\n",
      "              'config_list': [1, 2, 3],\n",
      "              'config_none': 'None',\n",
      "              'config_dict': {'sub_config': 'water'}},\n",
      " 'context2': {'config_int': 1,\n",
      "              'config_string': 'fire',\n",
      "              'config_list': [1, 2, 3],\n",
      "              'config_none': 'None',\n",
      "              'config_dict': {'sub_config': 'water'}},\n",
      " 'default': {'config_int': 1,\n",
      "             'config_string': 'fire',\n",
      "             'config_list': [1, 2, 3],\n",
      "             'config_none': 'None',\n",
      "             'config_dict': {'sub_config': 'water'}}}\n"
     ]
    }
   ],
   "source": [
    "# context1 and context2 will have the same content as the default context\n",
    "pprint(config_reader.read(), sort_dicts=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9eac2b47-445f-42f4-ab64-f832eb086792",
   "metadata": {},
   "source": [
    "### The **multiple contexts** can be **independent updated**."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "7eda3c32-ab49-41ad-bed2-675184aa9b54",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'context1': {'config_int': 1,\n",
      "              'config_string': 'context1_string',\n",
      "              'config_list': [1, 2, 3],\n",
      "              'config_none': 'None',\n",
      "              'config_dict': {'sub_config': 'water'}},\n",
      " 'context2': {'config_int': 1,\n",
      "              'config_string': 'context2_string',\n",
      "              'config_list': [1, 2, 3],\n",
      "              'config_none': 'None',\n",
      "              'config_dict': {'sub_config': 'water'}},\n",
      " 'default': {'config_int': 1,\n",
      "             'config_string': 'default',\n",
      "             'config_list': [1, 2, 3],\n",
      "             'config_none': 'None',\n",
      "             'config_dict': {'sub_config': 'water'}}}\n"
     ]
    }
   ],
   "source": [
    "user_config = {\n",
    "    \"myconfig\": {\n",
    "        \"default\": {\"config_string\": \"default\"},\n",
    "        \"context1\": {\"config_string\": \"context1_string\"},\n",
    "        \"context2\": {\"config_string\": \"context2_string\"},\n",
    "    },\n",
    "}\n",
    "\n",
    "pprint(\n",
    "    config_reader.read(user_config=user_config),\n",
    "    sort_dicts=False,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fa6482c7-aba6-4a3c-8bb9-ef7babfcda01",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
