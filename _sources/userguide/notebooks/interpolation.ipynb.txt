{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "ed5aaee6-e9d3-4223-87af-1751b4127cb5",
   "metadata": {
    "tags": []
   },
   "source": [
    "# **Interpolation: build_config**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "bd5d160d-3fd7-4529-a653-b3adc2a85178",
   "metadata": {},
   "outputs": [],
   "source": [
    "from pprint import pprint\n",
    "\n",
    "from dicfg import ConfigReader, build_config"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "4975a47d-ccfe-409d-ba3f-3d8e65c69ca2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "default:\n",
      "    config_int: 1\n",
      "    config_string: \"fire\"\n",
      "    config_list: [1, 2, 3]\n",
      "    config_none: None\n",
      "    config_dict:\n",
      "        sub_config: \"water\""
     ]
    }
   ],
   "source": [
    "!cat ./configs/config.yml\n",
    "config_reader = ConfigReader(name=\"myconfig\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "51b53261-0967-4ffe-8386-5010924482d3",
   "metadata": {},
   "source": [
    "## **Config files** (.yml, '.yaml', and 'json') can be **interpolated** in a config"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "676b8e6e-6d04-4501-882d-7e29d7674ef4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "sub_config: 'earth'"
     ]
    }
   ],
   "source": [
    "!cat ./interpolation.yml"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "063ff673-9fbd-4e87-986b-8d4c317071ca",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'default': {'config_int': 1,\n",
      "             'config_string': 'fire',\n",
      "             'config_list': [1, 2, 3],\n",
      "             'config_none': 'None',\n",
      "             'config_dict': {'sub_config': 'earth'}}}\n"
     ]
    }
   ],
   "source": [
    "user_config = {\"myconfig\": {\"default\": {\"config_dict\": \"./interpolation.yml\"}}}\n",
    "pprint(config_reader.read(user_config), sort_dicts=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "497511f7-5111-4ea2-926f-beae24f1f772",
   "metadata": {},
   "source": [
    "## **Config values** can be **interpolated** in a config by referencing with **$(key)** and building the config with **build_config**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "579f4244-5343-493f-9b6a-ff301548c00c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'default': {'config_int': 1,\n",
      "             'config_string': 'fire',\n",
      "             'config_list': [1, 2, 3],\n",
      "             'config_none': 'None',\n",
      "             'config_dict': {'sub_config': '${config_string}'}}}\n",
      "\n",
      "default config build:\n",
      "\n",
      "{'config_int': 1,\n",
      " 'config_string': 'fire',\n",
      " 'config_list': [1, 2, 3],\n",
      " 'config_none': None,\n",
      " 'config_dict': {'sub_config': 'fire'}}\n"
     ]
    }
   ],
   "source": [
    "user_config = {\n",
    "    \"myconfig\": {\"default\": {\"config_dict\": {\"sub_config\": \"${config_string}\"}}}\n",
    "}\n",
    "config = config_reader.read(user_config)\n",
    "pprint(config, sort_dicts=False)\n",
    "\n",
    "print(\"\\ndefault config build:\\n\")\n",
    "pprint(build_config(config[\"default\"]), sort_dicts=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a123263a-3665-4194-be61-8a38d6b728c3",
   "metadata": {
    "tags": []
   },
   "source": [
    "## **Environment variables** can be interpolated by using **${\\$env.VAR\\}**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "9a349c96-7b5a-4702-8121-518ea58cd31b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'default': {'config_int': 1,\n",
      "             'config_string': 'fire',\n",
      "             'config_list': [1, 2, 3],\n",
      "             'config_none': 'None',\n",
      "             'config_dict': {'sub_config': 'water'},\n",
      "             'env_user': '${$env.USER}'}}\n",
      "\n",
      "default config build:\n",
      "\n",
      "{'config_int': 1,\n",
      " 'config_string': 'fire',\n",
      " 'config_list': [1, 2, 3],\n",
      " 'config_none': None,\n",
      " 'config_dict': {'sub_config': 'water'},\n",
      " 'env_user': 'mart'}\n"
     ]
    }
   ],
   "source": [
    "user_config = {\"myconfig\": {\"default\": {\"env_user\": \"${$env.USER}\"}}}\n",
    "config = config_reader.read(user_config)\n",
    "pprint(config, sort_dicts=False)\n",
    "\n",
    "print(\"\\ndefault config build:\\n\")\n",
    "pprint(build_config(config[\"default\"]), sort_dicts=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "be002af5-2da4-4af1-9792-22eb93efd466",
   "metadata": {},
   "source": [
    "## **Python objects** can be interpolated by using **${\\$module.Object\\}**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "3b15178b-d0b0-4e07-a519-8247018ad3be",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'default': {'config_int': 1,\n",
      "             'config_string': 'fire',\n",
      "             'config_list': [1, 2, 3],\n",
      "             'config_none': 'None',\n",
      "             'config_dict': {'sub_config': 'water'},\n",
      "             'version': '${$dicfg.__version__}'}}\n",
      "\n",
      " build objects: \n",
      "\n",
      "{'config_dict': {'sub_config': 'water'},\n",
      " 'config_int': 1,\n",
      " 'config_list': [1, 2, 3],\n",
      " 'config_none': None,\n",
      " 'config_string': 'fire',\n",
      " 'version': '0.0.4'}\n"
     ]
    }
   ],
   "source": [
    "user_config = {\n",
    "    \"myconfig\": {\"default\": {\"version\": \"${$dicfg.__version__}\"}},\n",
    "}\n",
    "config = config_reader.read(user_config)\n",
    "pprint(config, sort_dicts=False)\n",
    "objects = build_config(config[\"default\"])\n",
    "\n",
    "print(\"\\n build objects: \\n\")\n",
    "\n",
    "pprint(objects)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "397c84d4-1309-45d8-8c24-7ea020910e2a",
   "metadata": {},
   "source": [
    "## **String values** can be **interpolated** in a config by referencing with **$(key)** and building the config with **build_config**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "bbf0d06f-c61f-4d19-826e-4b8ded5f570e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'default': {'config_int': 1,\n",
      "             'config_string': 'fire',\n",
      "             'config_list': [1, 2, 3],\n",
      "             'config_none': 'None',\n",
      "             'config_dict': {'sub_config': 'water'},\n",
      "             'combined_values': '${config_string}_${config_int}'}}\n",
      "\n",
      "default config build:\n",
      "\n",
      "{'config_int': 1,\n",
      " 'config_string': 'fire',\n",
      " 'config_list': [1, 2, 3],\n",
      " 'config_none': None,\n",
      " 'config_dict': {'sub_config': 'water'},\n",
      " 'combined_values': 'fire_1'}\n"
     ]
    }
   ],
   "source": [
    "user_config = {\n",
    "    \"myconfig\": {\n",
    "        \"default\": {\"combined_values\": \"${config_string}_${config_int}\"}\n",
    "    }\n",
    "}\n",
    "config = config_reader.read(user_config)\n",
    "pprint(config, sort_dicts=False)\n",
    "\n",
    "print(\"\\ndefault config build:\\n\")\n",
    "pprint(build_config(config[\"default\"]), sort_dicts=False)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.0"
  },
  "vscode": {
   "interpreter": {
    "hash": "ed139fa63c9e1b35fa3606f58a67a15b71f6342fabc1ebd87d5a11e6201a1389"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
